2025-10-31 | Find the Two Sneaky Numbers

Problem Statement
In the town of Digitville, there was a list of numbers called nums containing integers from 0 to n - 1.
Each number was supposed to appear exactly once in the list.
However, two mischievous numbers sneaked in an additional time, making the list longer than usual.


Approach / Explanation
1.	Observation
•	Each number from 0 to n - 1 should appear exactly once.
•	The two numbers that appear twice will have a frequency greater than 1.

SOLUTION:
class Solution {
public:
    vector<int> getSneakyNumbers(vector<int>& nums) {
        map<int, int> mp;

        // Count occurrences of each number
        for (int num : nums) {
            mp[num]++;
        }

        vector<int> ans;

        // Collect numbers appearing more than once
        for (auto &entry : mp) {
            if (entry.second > 1) {
                ans.push_back(entry.first);
            }
        }

        return ans;
    }
};
