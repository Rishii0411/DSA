2025-10-18 | Maximum Distinct Elements After Operations


Approach
	1.	Sort the Array
	•	Sorting helps in processing elements in ascending order, making it easier to assign distinct values greedily.
	2.	Greedy Assignment of Distinct Values
	•	Maintain a variable prev to store the last chosen distinct number.
	•	For each element x:
	•	The smallest feasible distinct number for this element is max(prev + 1, x - k) (must be larger than prev and within the allowed range).
	•	The largest feasible number is x + k.
	•	If the candidate number ≤ x + k, assign it and increment the count of distinct numbers.
	3.	Count Distinct Numbers
	•	Each time a number is successfully assigned, increment the result ans.

Time Complexity: O(n log n), dominated by the sorting step
Space Complexity: O(1), only a few variables are used

SOLUTION:
class Solution {
public:
    int maxDistinctElements(vector<int>& nums, int k) {
        sort(nums.begin(), nums.end());
        long long prev = LLONG_MIN;  // last chosen distinct number
        int ans = 0;

        for (long long x : nums) {
            long long candidate = max(prev + 1, x - k); // smallest possible distinct number > prev
            if (candidate <= x + k) {
                prev = candidate;  // assign this distinct number
                ans++;
            }
            // else cannot assign any distinct value to this x
        }
        return ans;
    }
};
